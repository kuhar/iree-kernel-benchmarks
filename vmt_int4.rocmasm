	.text
	.amdgcn_target "amdgcn-amd-amdhsa--gfx940:sramecc+:xnack-"
	.globl	main_dispatch_0_generic_4096x32x128_f16
	.p2align	8
	.type	main_dispatch_0_generic_4096x32x128_f16,@function
main_dispatch_0_generic_4096x32x128_f16:
	v_lshrrev_b32_e32 v1, 4, v0
	v_lshlrev_b32_e32 v2, 3, v0
	v_lshlrev_b32_e32 v4, 7, v1
	v_sub_co_u32_e32 v2, vcc, v2, v4
	s_load_dwordx8 s[4:11], s[0:1], 0x0
	s_load_dwordx2 s[0:1], s[0:1], 0x20
	v_subb_co_u32_e64 v4, s[12:13], 0, 0, vcc
	v_ashrrev_i32_e32 v6, 31, v4
	v_xor_b32_e32 v5, v6, v4
	v_mov_b32_e32 v3, 0
	v_xor_b32_e32 v4, v6, v2
	v_lshrrev_b32_e32 v2, 31, v5
	v_lshl_add_u64 v[4:5], v[4:5], 0, v[2:3]
	s_ashr_i32 s3, s2, 31
	v_ashrrev_i64 v[4:5], 1, v[4:5]
	s_lshl_b64 s[12:13], s[2:3], 11
	v_xor_b32_e32 v11, v5, v6
	v_xor_b32_e32 v10, v4, v6
	v_lshlrev_b32_e32 v2, 4, v0
	s_waitcnt lgkmcnt(0)
	v_lshl_add_u64 v[4:5], s[10:11], 0, v[2:3]
	s_lshl_b64 s[10:11], s[2:3], 6
	v_lshl_add_u64 v[10:11], v[10:11], 0, s[12:13]
	v_lshlrev_b32_e32 v2, 6, v1
	v_lshl_or_b32 v8, v1, 1, s10
	v_mov_b32_e32 v9, s11
	v_lshl_add_u64 v[10:11], v[10:11], 0, v[2:3]
	v_lshl_add_u64 v[6:7], s[6:7], 0, v[8:9]
	v_lshl_add_u64 v[8:9], s[8:9], 0, v[8:9]
	v_lshl_add_u64 v[10:11], s[4:5], 0, v[10:11]
	s_mov_b64 s[4:5], -4
	s_mov_b64 s[6:7], 0x400
	s_mov_b64 s[8:9], 0x100
	v_mov_b32_e32 v1, 15
	v_mov_b32_e32 v13, v3
	v_mov_b32_e32 v12, v3
	v_mov_b32_e32 v2, v3
.LBB0_1:
	global_load_dword v18, v[10:11], off
	global_load_ushort v19, v[8:9], off
	global_load_ushort v20, v[6:7], off
	global_load_dwordx4 v[14:17], v[4:5], off
	s_add_u32 s4, s4, 4
	s_addc_u32 s5, s5, 0
	v_cmp_lt_u64_e64 s[10:11], s[4:5], 28
	v_lshl_add_u64 v[4:5], v[4:5], 0, s[6:7]
	v_lshl_add_u64 v[6:7], v[6:7], 0, 8
	v_lshl_add_u64 v[8:9], v[8:9], 0, 8
	v_lshl_add_u64 v[10:11], v[10:11], 0, s[8:9]
	s_and_b64 vcc, exec, s[10:11]
	s_waitcnt vmcnt(3)
	v_and_b32_sdwa v21, v18, v1 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:BYTE_3 src1_sel:DWORD
	v_and_b32_sdwa v22, v18, v1 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_1 src1_sel:DWORD
	v_and_b32_sdwa v23, v18, v1 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:BYTE_1 src1_sel:DWORD
	v_and_b32_e32 v24, 15, v18
	v_lshrrev_b32_e32 v25, 28, v18
	v_lshrrev_b32_e32 v26, 20, v18
	v_lshrrev_b16_e32 v27, 12, v18
	v_lshrrev_b16_e32 v18, 4, v18
	v_and_b32_e32 v26, 15, v26
	v_and_b32_e32 v18, 15, v18
	v_cvt_f16_u16_e32 v24, v24
	v_cvt_f16_u16_e32 v23, v23
	v_cvt_f16_u16_e32 v27, v27
	v_cvt_f16_u16_e32 v22, v22
	v_cvt_f16_u16_e32 v21, v21
	v_cvt_f16_u16_e32 v25, v25
	v_cvt_f16_u16_e32 v18, v18
	v_cvt_f16_u16_e32 v26, v26
	s_waitcnt vmcnt(2)
	v_sub_f16_e32 v25, v25, v19
	v_sub_f16_e32 v21, v21, v19
	v_sub_f16_e32 v22, v22, v19
	v_sub_f16_e32 v27, v27, v19
	v_sub_f16_e32 v23, v23, v19
	v_sub_f16_e32 v24, v24, v19
	v_sub_f16_e32 v26, v26, v19
	v_sub_f16_e32 v18, v18, v19
	v_pack_b32_f16 v19, v23, v27
	v_pack_b32_f16 v21, v21, v25
	v_pack_b32_f16 v18, v24, v18
	v_pack_b32_f16 v22, v22, v26
	s_waitcnt vmcnt(1)
	v_pk_mul_f16 v19, v20, v19 op_sel_hi:[0,1]
	v_pk_mul_f16 v21, v20, v21 op_sel_hi:[0,1]
	v_pk_mul_f16 v18, v20, v18 op_sel_hi:[0,1]
	v_pk_mul_f16 v20, v20, v22 op_sel_hi:[0,1]
	s_waitcnt vmcnt(0)
	v_pk_fma_f16 v2, v17, v21, v2
	v_pk_fma_f16 v13, v15, v19, v13
	v_pk_fma_f16 v12, v16, v20, v12
	v_pk_fma_f16 v3, v14, v18, v3
	s_cbranch_vccnz .LBB0_1
	v_add_f16_e32 v1, 0, v3
	v_add_f16_sdwa v1, v1, v3 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_1
	v_add_f16_e32 v3, 0, v12
	v_add_f16_sdwa v3, v3, v12 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_1
	v_add_f16_e32 v1, v1, v13
	v_add_f16_e32 v3, v3, v2
	v_add_f16_sdwa v1, v1, v13 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_1
	v_add_f16_sdwa v2, v3, v2 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_1
	v_pack_b32_f16 v1, v1, v2
	v_mbcnt_lo_u32_b32 v2, -1, 0
	v_mbcnt_hi_u32_b32 v2, -1, v2
	v_and_b32_e32 v3, 64, v2
	v_add_u32_e32 v3, 64, v3
	v_xor_b32_e32 v4, 1, v2
	v_cmp_lt_i32_e32 vcc, v4, v3
	s_nop 1
	v_cndmask_b32_e32 v4, v2, v4, vcc
	v_lshlrev_b32_e32 v4, 2, v4
	ds_bpermute_b32 v4, v4, v1
	s_waitcnt lgkmcnt(0)
	v_pk_add_f16 v1, v1, v4
	v_xor_b32_e32 v4, 2, v2
	v_cmp_lt_i32_e32 vcc, v4, v3
	s_nop 1
	v_cndmask_b32_e32 v4, v2, v4, vcc
	v_lshlrev_b32_e32 v4, 2, v4
	ds_bpermute_b32 v4, v4, v1
	s_waitcnt lgkmcnt(0)
	v_pk_add_f16 v1, v1, v4
	v_xor_b32_e32 v4, 4, v2
	v_cmp_lt_i32_e32 vcc, v4, v3
	s_nop 1
	v_cndmask_b32_e32 v4, v2, v4, vcc
	v_lshlrev_b32_e32 v4, 2, v4
	ds_bpermute_b32 v4, v4, v1
	s_waitcnt lgkmcnt(0)
	v_pk_add_f16 v1, v1, v4
	v_xor_b32_e32 v4, 8, v2
	v_cmp_lt_i32_e32 vcc, v4, v3
	s_nop 1
	v_cndmask_b32_e32 v4, v2, v4, vcc
	v_lshlrev_b32_e32 v4, 2, v4
	ds_bpermute_b32 v4, v4, v1
	s_waitcnt lgkmcnt(0)
	v_pk_add_f16 v1, v1, v4
	v_xor_b32_e32 v4, 16, v2
	v_cmp_lt_i32_e32 vcc, v4, v3
	s_nop 1
	v_cndmask_b32_e32 v4, v2, v4, vcc
	v_lshlrev_b32_e32 v4, 2, v4
	ds_bpermute_b32 v4, v4, v1
	s_waitcnt lgkmcnt(0)
	v_pk_add_f16 v1, v1, v4
	v_xor_b32_e32 v4, 32, v2
	v_cmp_lt_i32_e32 vcc, v4, v3
	s_nop 1
	v_cndmask_b32_e32 v2, v2, v4, vcc
	v_lshlrev_b32_e32 v2, 2, v2
	ds_bpermute_b32 v2, v2, v1
	v_cmp_eq_u32_e32 vcc, 0, v0
	s_and_saveexec_b64 s[4:5], vcc
	s_cbranch_execz .LBB0_4
	s_lshl_b64 s[2:3], s[2:3], 1
	s_waitcnt lgkmcnt(0)
	v_pk_add_f16 v1, v1, v2
	s_add_u32 s0, s0, s2
	v_add_f16_e32 v2, 0, v1
	s_addc_u32 s1, s1, s3
	v_mov_b32_e32 v0, 0
	v_add_f16_sdwa v1, v2, v1 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_1
	global_store_short v0, v1, s[0:1] sc0 sc1
.LBB0_4:
	s_endpgm
	.section	.rodata,#alloc
	.p2align	6, 0x0
	.amdhsa_kernel main_dispatch_0_generic_4096x32x128_f16
		.amdhsa_group_segment_fixed_size 0
		.amdhsa_private_segment_fixed_size 0
		.amdhsa_kernarg_size 40
		.amdhsa_user_sgpr_count 2
		.amdhsa_user_sgpr_dispatch_ptr 0
		.amdhsa_user_sgpr_queue_ptr 0
		.amdhsa_user_sgpr_kernarg_segment_ptr 1
		.amdhsa_user_sgpr_dispatch_id 0
		.amdhsa_user_sgpr_kernarg_preload_length  0
		.amdhsa_user_sgpr_kernarg_preload_offset  0
		.amdhsa_user_sgpr_private_segment_size 0
		.amdhsa_enable_private_segment 0
		.amdhsa_system_sgpr_workgroup_id_x 1
		.amdhsa_system_sgpr_workgroup_id_y 0
		.amdhsa_system_sgpr_workgroup_id_z 0
		.amdhsa_system_sgpr_workgroup_info 0
		.amdhsa_system_vgpr_workitem_id 0
		.amdhsa_next_free_vgpr 28
		.amdhsa_next_free_sgpr 14
		.amdhsa_accum_offset 28
		.amdhsa_reserve_xnack_mask 0
		.amdhsa_float_round_mode_32 0
		.amdhsa_float_round_mode_16_64 0
		.amdhsa_float_denorm_mode_32 3
		.amdhsa_float_denorm_mode_16_64 3
		.amdhsa_dx10_clamp 1
		.amdhsa_ieee_mode 1
		.amdhsa_fp16_overflow 0
		.amdhsa_tg_split 0
		.amdhsa_exception_fp_ieee_invalid_op 0
		.amdhsa_exception_fp_denorm_src 0
		.amdhsa_exception_fp_ieee_div_zero 0
		.amdhsa_exception_fp_ieee_overflow 0
		.amdhsa_exception_fp_ieee_underflow 0
		.amdhsa_exception_fp_ieee_inexact 0
		.amdhsa_exception_int_div_zero 0
	.end_amdhsa_kernel
	.text
.Lfunc_end0:
	.size	main_dispatch_0_generic_4096x32x128_f16, .Lfunc_end0-main_dispatch_0_generic_4096x32x128_f16

	.p2alignl 6, 3212836864
	.fill 256, 4, 3212836864
	.section	".note.GNU-stack"
	.amdgpu_metadata
---
amdhsa.kernels:
  - .agpr_count:     0
    .args:
      - .actual_access:  read_only
        .address_space:  global
        .offset:         0
        .size:           8
        .value_kind:     global_buffer
      - .actual_access:  read_only
        .address_space:  global
        .offset:         8
        .size:           8
        .value_kind:     global_buffer
      - .actual_access:  read_only
        .address_space:  global
        .offset:         16
        .size:           8
        .value_kind:     global_buffer
      - .actual_access:  read_only
        .address_space:  global
        .offset:         24
        .size:           8
        .value_kind:     global_buffer
      - .address_space:  global
        .offset:         32
        .size:           8
        .value_kind:     global_buffer
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 8
    .kernarg_segment_size: 40
    .max_flat_workgroup_size: 64
    .name:           main_dispatch_0_generic_4096x32x128_f16
    .private_segment_fixed_size: 0
    .sgpr_count:     20
    .sgpr_spill_count: 0
    .symbol:         main_dispatch_0_generic_4096x32x128_f16.kd
    .vgpr_count:     28
    .vgpr_spill_count: 0
    .wavefront_size: 64
amdhsa.target:   'amdgcn-amd-amdhsa--gfx940:sramecc+:xnack-'
amdhsa.version:
  - 1
  - 1
...

	.end_amdgpu_metadata
